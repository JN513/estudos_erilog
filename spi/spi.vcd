$date
	Tue Oct 24 00:20:18 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! tx_d $end
$var wire 1 " slave_tx_d $end
$var wire 1 # slave_d $end
$var wire 1 $ sclk $end
$var wire 8 % rx_master_data [7:0] $end
$var wire 8 & rx_data [7:0] $end
$var wire 1 ' rx_d $end
$var wire 1 ( mosi $end
$var wire 1 ) miso $end
$var wire 1 * cs $end
$var reg 1 + clk $end
$var reg 8 , data [7:0] $end
$var reg 8 - data_slave [7:0] $end
$var reg 1 . reset $end
$var reg 1 / reset_slave $end
$scope module u1 $end
$var wire 1 + clk $end
$var wire 1 * cs $end
$var wire 1 ( mosi $end
$var wire 1 . reset $end
$var wire 8 0 rx_data [7:0] $end
$var wire 1 ' rx_done $end
$var wire 1 $ spi_clk $end
$var wire 8 1 tx_data [7:0] $end
$var wire 1 ! tx_done $end
$var wire 1 ) miso $end
$var parameter 32 2 START $end
$var parameter 32 3 STOP $end
$var parameter 32 4 WORK $end
$var reg 1 5 clk_r $end
$var reg 4 6 cont [3:0] $end
$var reg 4 7 cont_rx [3:0] $end
$var reg 1 8 cs_r $end
$var reg 1 9 mosi_r $end
$var reg 8 : rx_data_r [7:0] $end
$var reg 1 ; rx_done_r $end
$var reg 2 < state [1:0] $end
$var reg 8 = tx_data_r [7:0] $end
$var reg 1 > tx_done_r $end
$upscope $end
$scope module u2 $end
$var wire 1 + clk $end
$var wire 1 * cs $end
$var wire 1 ) miso $end
$var wire 1 ( mosi $end
$var wire 1 / reset $end
$var wire 8 ? rx_data [7:0] $end
$var wire 1 # rx_done $end
$var wire 1 $ spi_clk $end
$var wire 8 @ tx_data [7:0] $end
$var wire 1 " tx_done $end
$var reg 4 A cont [3:0] $end
$var reg 4 B cont_tx [3:0] $end
$var reg 1 C miso_r $end
$var reg 8 D rx_data_r [7:0] $end
$var reg 1 E rx_done_r $end
$var reg 8 F tx_data_r [7:0] $end
$var reg 1 G tx_done_r $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 4
b10 3
b0 2
$end
#0
$dumpvars
1G
b0 F
1E
b0 D
0C
b0 B
b0 A
b10101101 @
b0 ?
1>
bx =
b10 <
1;
bx :
09
18
b0 7
b0 6
15
b10110101 1
bx 0
1/
1.
b10101101 -
b10110101 ,
0+
1*
0)
0(
1'
b0 &
bx %
1$
1#
1"
1!
$end
#1
b10110101 =
0!
0>
b0 <
0$
0/
0.
1+
#2
1$
0+
#3
b1 <
b1101010 =
1(
19
0*
08
0$
1+
1/
1.
#4
b1 7
b0xxxxxxx %
b0xxxxxxx 0
b0xxxxxxx :
0'
0;
b1 A
b10000000 &
b10000000 ?
b10000000 D
0#
0E
1$
0+
#5
b1 6
0(
09
b11010100 =
b1 B
1)
1C
0"
0G
0$
b1011010 F
1+
#6
b10 A
b1000000 &
b1000000 ?
b1000000 D
b10 7
b10xxxxxx %
b10xxxxxx 0
b10xxxxxx :
1$
0+
#7
b10 B
0)
0C
b10110100 F
b10 6
1(
19
b10101000 =
0$
1+
#8
b11 7
b10xxxxx %
b10xxxxx 0
b10xxxxx :
b11 A
b10100000 &
b10100000 ?
b10100000 D
1$
0+
#9
b11 6
b1010000 =
b11 B
1)
1C
b1101000 F
0$
1+
#10
b100 A
b11010000 &
b11010000 ?
b11010000 D
b100 7
b1010xxxx %
b1010xxxx 0
b1010xxxx :
1$
0+
#11
b100 B
0)
0C
b11010000 F
b100 6
0(
09
b10100000 =
0$
1+
#12
b101 7
b1010xxx %
b1010xxx 0
b1010xxx :
b101 A
b1101000 &
b1101000 ?
b1101000 D
1$
0+
#13
b101 6
1(
19
b1000000 =
b101 B
1)
1C
b10100000 F
0$
1+
#14
b110 A
b10110100 &
b10110100 ?
b10110100 D
b110 7
b101010xx %
b101010xx 0
b101010xx :
1$
0+
#15
b110 B
b1000000 F
b110 6
0(
09
b10000000 =
0$
1+
#16
b111 7
b1101010x %
b1101010x 0
b1101010x :
b111 A
b1011010 &
b1011010 ?
b1011010 D
1$
0+
#17
b111 6
1(
19
b0 =
b10 <
b111 B
0)
0C
b10000000 F
0$
1+
#18
1#
1E
b1000 A
b10101101 &
b10101101 ?
b10101101 D
1'
1;
b1000 7
b1101010 %
b1101010 0
b1101010 :
1$
0+
#19
1"
1G
b0 B
0)
0C
b0 F
1*
18
0(
09
1!
1>
0$
1+
#20
1$
0+
#21
0$
1+
#22
1$
0+
#23
0$
1+
